name: Test and deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.1"
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Install Docker Desktop
        run: |
          curl -fsSL -o docker.dmg https://mirrors.ustc.edu.cn/docker-ce/desktop/mac/stable/Docker.dmg
          hdiutil attach docker.dmg
          cp -R /Volumes/Docker/Docker.app /Applications/
          sleep 5
          hdiutil detach /Volumes/Docker
          open --background -a /Applications/Docker.app
          sleep 10
          docker version
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: hoanghy/e-tour:latest
          build-args: |
            NODE_ENV=${{ secrets.NODE_ENV }}
            PORT=${{ secrets.PORT }}
            CORS_URL=${{ secrets.CORS_URL }}
            LOG_DIR=${{ secrets.LOG_DIR }}
            MONGO_URL=${{ secrets.MONGO_URL }}
            TZ=${{ secrets.TZ }}
            DB_MIN_POOL_SIZE=${{ secrets.DB_MIN_POOL_SIZE }}
            DB_MAX_POOL_SIZE=${{ secrets.DB_MAX_POOL_SIZE }}
            ACCESS_TOKEN_VALIDITY_SEC=${{ secrets.ACCESS_TOKEN_VALIDITY_SEC }}
            REFRESH_TOKEN_VALIDITY_SEC=${{ secrets.REFRESH_TOKEN_VALIDITY_SEC }}
            TOKEN_ISSUER=${{ secrets.TOKEN_ISSUER }}
            TOKEN_AUDIENCE=${{ secrets.TOKEN_AUDIENCE }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}
